<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>JJFLY</title><link>https://jjflycloud.github.io</link><description>记录Linux运维日常</description><copyright>JJFLY</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://github.githubassets.com/favicons/favicon.svg</url><title>avatar</title><link>https://jjflycloud.github.io</link></image><lastBuildDate>Sat, 16 Aug 2025 03:15:53 +0000</lastBuildDate><managingEditor>JJFLY</managingEditor><ttl>60</ttl><webMaster>JJFLY</webMaster><item><title>Alpine系统使用小技巧</title><link>https://jjflycloud.github.io/post/Alpine-xi-tong-shi-yong-xiao-ji-qiao.html</link><description>### Alpine 使用技巧

之前一直在用Debian系统来部署应用等，使用systemd给程序保活、开机自启比较方便，虽然Debian系统本身占用不高，但对比Alpine还是小巫见大巫了
现在市面上有很多拼好鸡，使用Alpine可以省出来更多的内存和硬盘

Alpine一般使用openrc来管理服务
配置文件在 `/etc/init.d/`目录
对于已经编译好无依赖的二进制程序(比如哪吒探针客户端)，示例如下

`nano /etc/init.d/nezha-agent`

```
name='nezha-agent' #服务名
supervisor='supervise-daemon' 
command='/usr/sbin/nezha-agent' #二进制文件的路径
command_args='-s 127.0.0.1:5555 -p 114514 --disable-force-update --disable-auto-update  --skip-conn --skip-procs' #执行参数
extra_started_commands='' #服务启动以后执行的命令
extra_stopped_commands='' #服务停止以后执行的命令
command_user='root:root' #执行用户和用户组

#在网络启动后启动服务，二进制程序一般无需改动
depend() {
        after net dns
        use net
}
#保存文件后
chmod +x /etc/init.d/nezha-agent #给可执行权限
rc-update add nezha-agent #添加服务，开机自启，相当于Debian下的systemctl enable nezha-agent
rc-service start nezha-agent #启动服务，相当于Debian下的systemctl start nezha-agent
#之后这个程序就可以随系统启动了top命令里也可以看到该命令在执行中
'/usr/sbin/nezha-agent -s 127.0.0.1:5555 -p 114514 --disable-force-update --disable-auto-update  --skip-conn --skip-procs'

rc-update del nezha-agent #取消开机自启，相当于Debian下的systemctl disable nezha-agent
rc-service restart  nezha-agent #重启服务 ，相当于Debian下的systemctl restart nezha-agent
rc-service stop  nezha-agent #关闭服务，相当于Debian下的systemctl stop nezha-agent
```

以上就是二进制无依赖的程序如何在Alpine上实现开机自启、进程保活，希望能帮助到你
。</description><guid isPermaLink="true">https://jjflycloud.github.io/post/Alpine-xi-tong-shi-yong-xiao-ji-qiao.html</guid><pubDate>Wed, 06 Aug 2025 10:57:35 +0000</pubDate></item><item><title>纯Shell实现的华为云ddns脚本</title><link>https://jjflycloud.github.io/post/chun-Shell-shi-xian-de-hua-wei-yun-ddns-jiao-ben.html</link><description>

项目地址 https://github.com/JJFLYCLOUD/huaweicloud_ddns

fork自   https://github.com/lllvcs/huaweicloud_ddns

修改之处：v4和v6脚本二合一，自行更改注释行来切换；仅保留了在线查询公网IP，删除了通过网卡获取

使用方法：


```
#下载脚本
wget https://raw.githubusercontent.com/JJFLYCLOUD/huaweicloud_ddns/master/huaweicloud_ddns.sh
#赋予执行权限
chmod +x huaweicloud_ddns.sh
#放到不显眼的位置
mv huaweicloud_ddns.sh /etc/
#填入参数
vi /etc/huaweicloud_ddns.sh

ACCOUNTNAME=''  #账号中心里的'账号名'
USERNAME=''        #统一身份认证里的新建一个用户的用户名
PASSWORD=''  #统一身份认证里的新建一个用户的密码

创建一条A记录或者AAAA记录，然后点击修改这条解析(可以加个备注什么的)先别点确定，同时浏览器按F12打开调试，此时点击确定，调试框里应该会有一条ff开头的请求，查看这条请求的响应，zone_id填入ZONE_ID处(代表这个域名,同域名zone_id不会变)，id填入RECORDSET_ID(代表这条解析,每条解析对应一个id)

#手动执行
bash -x /etc/huaweicloud_ddns.sh
#添加定时任务
echo '* * * * * root bash /etc/huaweicloud_ddns.sh' &gt;&gt; /etc/crontab
```


华为DNS作为免费DNS里功能算是最强大的了，海外可以分大洲、分国家解析，国内可以分运营商、分省份解析；希望这个脚本能对你有帮助
。</description><guid isPermaLink="true">https://jjflycloud.github.io/post/chun-Shell-shi-xian-de-hua-wei-yun-ddns-jiao-ben.html</guid><pubDate>Thu, 31 Jul 2025 13:00:09 +0000</pubDate></item><item><title>ACME.sh 证书自动化</title><link>https://jjflycloud.github.io/post/ACME.sh%20-zheng-shu-zi-dong-hua.html</link><description>TLS证书有效期越来越短，自动化越来越有必要，我一般使用acme.sh，项目地址
[https://github.com/acmesh-official/acme.sh/wiki/说明](https://github.com/acmesh-official/acme.sh/wiki/说明)

看重它的只有一点：安装过程不会污染已有的系统任何功能和文件，所有的修改都限制在安装目录中: `~/.acme.sh/` 删除或者备份都非常方便，只需要把`~/.acme.sh/`目录打包即可，再手动加一条定时任务

## 安装

`curl https://get.acme.sh | sh -s email=my@example.com （邮箱建议用真实的，证书变动可以收到提醒）`


## 常用命令

`acme.sh --list  显示域名列表`
`acme.sh --remove -d a.com  删除域名的自动续签，但不会删除文件`
`acme.sh --renew -d a.com 手动续签a.com证书，加 --force强制续签`
`acme.sh --renew-all 	 手动续签所有证书，加 --force强制续签`
`acme.sh --set-default-ca --server letsencrypt #设置LETS为默认证书提供商，具体server查看` `https://github.com/acmesh-official/acme.sh/wiki/Server`
`acme.sh  --upgrade  --auto-upgrade  设置自动升级`

## 常用的几种证书申请方式

* HTTP验证

`acme.sh --issue -d a.com -d b.com -d c.com --webroot /home/wwwroot/mydomain.com/`
　　补充：可以一次性验证多个域名，即使二级域名不一样也可以，无法签发泛域名；多个域名只生成一组tls证书；缺点就是国内服务器必须备案才能用，甚至例如阿里云的服务器等必须在阿里云备案才能用。</description><guid isPermaLink="true">https://jjflycloud.github.io/post/ACME.sh%20-zheng-shu-zi-dong-hua.html</guid><pubDate>Tue, 29 Jul 2025 03:20:48 +0000</pubDate></item><item><title>万事开头难</title><link>https://jjflycloud.github.io/post/wan-shi-kai-tou-nan.html</link><description>2025年7月11日
决定要用一个博客才接住我一身的才华(其实就是一个备忘录)
会记录Linux运维日常用到的命令以及工具等等等等。</description><guid isPermaLink="true">https://jjflycloud.github.io/post/wan-shi-kai-tou-nan.html</guid><pubDate>Fri, 11 Jul 2025 10:02:33 +0000</pubDate></item></channel></rss>